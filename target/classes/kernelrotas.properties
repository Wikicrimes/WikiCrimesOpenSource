#-
#--------------------------------------------------------------------------------------------------------------------------------------------------
#    WikiCrimes.org is a project/software that allows posting and accessing criminal occurrences in a digital map.
#    The philosophy that drives Wikicrimes is the same as Wikipedia: mass collaboration produces valuable knowledge.
#   That is to say, if everybody participates, the criminal mapping will be made collaboratively and everybody
#    will leverage crime information digitalized in the map. That is the reason for the slogan "Share crime information. Keep safe!". 
#    Wikicrimes is not a project developed by any security institution. 
#    In fact it is a project from the citizen to the citizen. 
#    
#    
#    Copyright (C) 2008  Wikinova Solutions (http://www.wikinova.com.br)
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#     any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#-------------------------------------------------------------------

#MAPA DE KERNEL - KERNEL MAP

kernelmap.nodesize = 1
#kernelmap.nodesize = 5

kernelmap.bandwidth = 7
#kernelmap.bandwidth = 20

#-------------------------------------------------------------------
#ROTA SEGURA

#quantidade de rotas enviadas no retorno (ex: 5 melhores rotas encontradas)
saferoutes.default_number_of_alternatives = 1
#saferoutes.default_number_of_alternatives = 5
#saferoutes.default_number_of_alternatives = 10

saferoutes.tolerance_factor = 1

#peso da distancia no calculo do perigo (varia entre 0 e 1)
saferoutes.distance_influence = .1

#saferoutes.max_gm_requests = 1
#saferoutes.max_gm_requests = 5
#saferoutes.max_gm_requests = 10
saferoutes.max_gm_requests = 20
#saferoutes.max_gm_requests = 30
#saferoutes.max_gm_requests = 1000

saferoutes.default_zoom = 13

#em anos atras
saferoutes.default_start_date = 1

#distancia máxima entre pontos na obtenção de pontos e rotas aproximadas
saferoutes.point_approximation_limit = 1000

#tamanho do intervalo entre os pontos calculados para saber se são promissores (é multiplicado pelo tamanho do NODE do mapa de kernel) 
saferoutes.promising_points_grid_resolution = 3


#quanto menor, mais arodeios serão corrigidos pelo algorítmo
saferoutes.refinement.loop_prunning_tolerance = 4

saferoutes.refinement.max_iterations = 1


#
saferoutes.route_granularity = 20


#se a distancia entre dois pontos for no máximo este valor, eles serao considerados iguais 
#isto é usado qd se calcula se uma reta passa por um ponto 
geometry.point_approximation = 2